{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","placeholder","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","gif","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAiBhD,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,OAMd,2BACIO,KAAO,OACPC,MAAUT,EACVU,YAAc,cACdC,SAnBc,SAACR,GACvBF,EAAeE,EAAES,OAAOH,Y,uBCRnBI,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVtB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAyB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAItC,OACI,yBAAKc,UAAY,0DACb,yBAAKC,IAAOf,EAAKgB,IAAON,IACxB,2BAAKA,KCLJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEdf,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KA2BxC,OApBAC,qBAAW,WAEPxB,EAASC,GACJwB,MAAM,SAAAC,GAICH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAS1B,CAACpB,IAEGqB,EDxB0BK,CAAc1B,GAAlCa,EAFwB,EAE7BN,KAAaa,EAFgB,EAEhBA,QAErB,OACI,oCACI,wBAAIJ,UAAY,qDAAsDhB,GAEpEoB,GAAW,uBAAGJ,UAAY,oDAAf,eAEb,yBAAKA,UAAY,aAETH,EAAOJ,KAAK,SAAAkB,GAAG,OACX,kBAAC,EAAD,eACIC,IAAQD,EAAIhB,IACPgB,UEfpBE,EAAe,WAAO,IAAD,EAEM5C,mBAAS,CAAC,mBAFhB,mBAEvB6C,EAFuB,KAEX9C,EAFW,KAS9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAkBA,IAC/B,6BAIA,4BAEI8C,EAAWrB,KAAK,SAAAT,GAAQ,OAEpB,kBAAC,EAAD,CACI4B,IAAQ5B,EACRA,SAAaA,U,MCrBrC+B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.09789e1f.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue( e.target.value )\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if( inputValue.trim().length > 2){\r\n            setCategories( cats => [ inputValue, ...cats ] );\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit = { handleSubmit }>\r\n            <input \r\n                type = 'text'\r\n                value = { inputValue }\r\n                placeholder = 'Buscar GIFs'\r\n                onChange = { handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=vU3o5RjAreVZ8q4XfeEn41ShrPNgXJxx`;\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url } ) => {\r\n\r\n    //console.log( {id, title, url} )\r\n\r\n    return (\r\n        <div className = \"card animate__animated animate__fadeIn animate__slower\">\r\n            <img src = {url} alt = {title} />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3 className = \"animate__animated animate__fadeIn animate__slower\">{ category }</h3>\r\n\r\n            { loading && <p className = \"animate__animated animate__flash animate__slower\">Cargando...</p> }\r\n\r\n            <div className = \"card-grid\">\r\n                    { \r\n                    images.map( gif => (\r\n                        <GifGridItem \r\n                            key = { gif.id }\r\n                            { ...gif }\r\n                        />\r\n                    )) \r\n                    }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n            .then( imgs => {\r\n\r\n                //setTimeout(() => {\r\n\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n                    \r\n                //}, 3000);\r\n\r\n\r\n\r\n            })\r\n\r\n    }, [category] )\r\n\r\n    return state; // { data: [], loading: true }\r\n\r\n}\r\n","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Rick and Morty']);\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategories( [...categories, 'HunterXHunter'] );\r\n    //     // setCategories( cats => [...cats, 'HunterXHunter'] );\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories = { setCategories } />\r\n            <hr />  \r\n\r\n            {/*<button onClick = { handleAdd }>Agregar</button>*/}\r\n\r\n            <ol>\r\n                { \r\n                categories.map( category => (\r\n                    //return <li key = { category }> {category} </li>\r\n                    <GifGrid \r\n                        key = { category }\r\n                        category = { category } \r\n                    />\r\n                )) \r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}